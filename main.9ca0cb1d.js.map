{"version":3,"sources":["scripts/main.js"],"names":["headlines","document","querySelector","rows","list","listRows","convertToNumber","string","number","Number","replace","addEventListener","e","headline","index","target","closest","cellIndex","sort","a","b","row","cells","textContent","nextRow","test","checkedRow","checkedNextRow","localeCompare","forEach","appendChild"],"mappings":";AAAA,aA8BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BD,IAAMA,EAAYC,SAASC,cAAc,SAASC,KAAK,GACjDC,EAAOH,SAASC,cAAc,SAC9BG,EAAWD,EAAKD,KAsBtB,SAASG,EAAgBC,GACjBC,IAAAA,EAASC,OAAOF,EAAOG,QAAQ,QAAS,KAEpCF,MAAAA,GAAAA,OAAAA,GAvBZR,EAAUW,iBAAiB,QAAS,SAACC,GAC7BC,IAEAC,EAFWF,EAAEG,OAAOC,QAAQ,MAEXC,UAEnBZ,EAAAA,GAAUa,KAAK,SAACC,EAAGC,GACfC,IAAAA,EAAMF,EAAEG,MAAMR,GAAOS,YACrBC,EAAUJ,EAAEE,MAAMR,GAAOS,YAE3B,GAAA,KAAKE,KAAKJ,GAAM,CACZK,IAAAA,EAAapB,EAAgBe,GAC7BM,EAAiBrB,EAAgBkB,GAEhCf,OAAAA,OAAOiB,GAAcjB,OAAOkB,GAG9BN,OAAAA,EAAIO,cAAcJ,KACxBK,QAAQ,SAAAR,GAAOjB,OAAAA,EAAK0B,YAAYT","file":"main.9ca0cb1d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst headlines = document.querySelector('thead').rows[0];\nconst list = document.querySelector('tbody');\nconst listRows = list.rows;\n\nheadlines.addEventListener('click', (e) => {\n  const headline = e.target.closest('th');\n\n  const index = headline.cellIndex;\n\n  [...listRows].sort((a, b) => {\n    const row = a.cells[index].textContent;\n    const nextRow = b.cells[index].textContent;\n\n    if (/\\d/.test(row)) {\n      const checkedRow = convertToNumber(row);\n      const checkedNextRow = convertToNumber(nextRow);\n\n      return Number(checkedRow) - Number(checkedNextRow);\n    }\n\n    return row.localeCompare(nextRow);\n  }).forEach(row => list.appendChild(row));\n});\n\nfunction convertToNumber(string) {\n  const number = Number(string.replace(/[$,]/g, ''));\n\n  return `${number}`;\n}\n"]}